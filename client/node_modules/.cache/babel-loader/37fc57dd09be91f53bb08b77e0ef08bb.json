{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomts\\\\source\\\\repos\\\\CodingDojo\\\\Dojo_Exams\\\\mern_exam_deploy\\\\client\\\\src\\\\components\\\\ItemEdit.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Form, Button, Card, Jumbotron } from 'react-bootstrap';\nimport { navigate } from '@reach/router';\n\nconst ItemEdit = props => {\n  const [validationError, setValidationError] = React.useState(\"\");\n  const [itemName, setItemName] = React.useState(\"\");\n  const [strVal1, setStrVal1] = React.useState(\"\");\n  const [strVal2, setStrVal2] = React.useState(\"\");\n\n  const getSelectedItem = () => {\n    axios.get(`http://localhost:8000/api/items/${props.id}`).then(response => {\n      let item = response.data.result;\n      setItemName(item.name);\n      setStrVal1(item.strVal1);\n      setStrVal2(item.strVal2);\n    });\n  };\n\n  React.useEffect(() => {\n    getSelectedItem();\n  }, [props.id]);\n\n  const updateItem = () => {\n    let updatedItem = {\n      name: itemName,\n      strVal1: strVal1,\n      strVal2: strVal2\n    };\n    axios.patch(`http://localhost:8000/api/items/${props.id}`, updatedItem).then(response => {\n      if (response.data.status === \"succeeded\") {\n        props.refreshItems();\n        navigate(\"/\");\n      } else {\n        setValidationError(JSON.stringify(response.data.message));\n      }\n    }).catch(err => {\n      let errors = [];\n      console.log(err.response);\n      let data = err.response.data;\n\n      for (let key in data.errors) {\n        errors.push(data.errors[key].message);\n      }\n\n      setValidationError(errors.join(\", \"));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Edit Item\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"itemName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Item Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter item name\",\n    value: itemName,\n    onChange: e => setItemName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"strVal1\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal1\",\n    value: strVal1,\n    onChange: e => setStrVal1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"strVal2\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal2\",\n    value: strVal2,\n    onChange: e => setStrVal2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => navigate(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: updateItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, validationError)));\n};\n\nexport default ItemEdit;","map":{"version":3,"sources":["C:/Users/tomts/source/repos/CodingDojo/Dojo_Exams/mern_exam_deploy/client/src/components/ItemEdit.js"],"names":["React","axios","Form","Button","Card","Jumbotron","navigate","ItemEdit","props","validationError","setValidationError","useState","itemName","setItemName","strVal1","setStrVal1","strVal2","setStrVal2","getSelectedItem","get","id","then","response","item","data","result","name","useEffect","updateItem","updatedItem","patch","status","refreshItems","JSON","stringify","message","catch","err","errors","console","log","key","push","join","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Card, Jumbotron } from 'react-bootstrap';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst ItemEdit = props => {\r\n    const [validationError, setValidationError] = React.useState(\"\");\r\n    const [itemName, setItemName] = React.useState(\"\")\r\n    const [strVal1, setStrVal1] = React.useState(\"\")\r\n    const [strVal2, setStrVal2] = React.useState(\"\")\r\n    const getSelectedItem = () => {\r\n        axios.get(`http://localhost:8000/api/items/${props.id}`)\r\n        .then(response => {\r\n            let item = response.data.result;\r\n            setItemName(item.name);\r\n            setStrVal1(item.strVal1);\r\n            setStrVal2(item.strVal2);\r\n        })\r\n    };\r\n    React.useEffect(() => {\r\n        getSelectedItem();\r\n    },[props.id]);\r\n\r\n    const updateItem = () => {\r\n        let updatedItem = {\r\n            name: itemName,\r\n            strVal1: strVal1,\r\n            strVal2: strVal2\r\n        }\r\n        axios.patch(`http://localhost:8000/api/items/${props.id}`, updatedItem)\r\n            .then(response => {\r\n                if (response.data.status === \"succeeded\") {\r\n                    props.refreshItems();\r\n                    navigate(\"/\");\r\n                } else {\r\n                    setValidationError(JSON.stringify(response.data.message));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                let errors = [];\r\n                console.log(err.response);\r\n                let data = err.response.data;\r\n                for (let key in data.errors) {\r\n                    errors.push(data.errors[key].message);\r\n                }\r\n                setValidationError(errors.join(\", \"));\r\n            });\r\n    }        \r\n    return (\r\n        <Jumbotron>\r\n            <h3>Edit Item</h3>\r\n            <Form>\r\n            <Form.Group controlId=\"itemName\">\r\n                <Form.Label>Item Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter item name\" value={itemName} onChange={e => setItemName(e.target.value)}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"strVal1\">\r\n                <Form.Label>strVal1</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter strVal1\" value={strVal1} onChange={e => setStrVal1(e.target.value)}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"strVal2\">\r\n                <Form.Label>strVal2</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter strVal2\" value={strVal2} onChange={e => setStrVal2(e.target.value)}/>\r\n            </Form.Group>\r\n            <div className=\"d-flex justify-content-around\">\r\n            <Button variant=\"primary\" onClick={() => navigate(\"/\")}>\r\n                Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={updateItem}>\r\n                Submit\r\n            </Button>\r\n            </div>\r\n            <Card.Text className=\"text-danger\">\r\n                {validationError}\r\n            </Card.Text>\r\n            </Form>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default ItemEdit\r\n"]},"metadata":{},"sourceType":"module"}