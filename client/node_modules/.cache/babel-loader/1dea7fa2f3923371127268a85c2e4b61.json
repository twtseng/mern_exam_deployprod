{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomts\\\\source\\\\repos\\\\CodingDojo\\\\Dojo_Assignments\\\\MERN\\\\FullStack\\\\practice1\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [api, setApi] = React.useState(null);\n  const [apiStatus, setApiStatus] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const [socket] = React.useState(() => io(\":8000\"));\n  React.useEffect(() => {\n    console.log(\"is this running?\");\n    socket.on('Welcome', data => setApiStatus(JSON.stringify(data)));\n    return () => socket.disconnect(true);\n  }, [socket]);\n\n  const getAuthenticatedUser = () => {\n    axios.get(\"http://localhost:8000/login/getauthenticateduser\", {\n      withCredentials: true\n    }).then(response => {\n      setApi(\"getAuthenticatedUser\");\n      setApiStatus(JSON.stringify(response.data.result));\n    }).catch(err => setApiStatus(JSON.stringify(err)));\n  };\n\n  const logoutAuthenticatedUser = () => {\n    axios.post(\"http://localhost:8000/login/logout\", {}, {\n      withCredentials: true\n    }).then(response => {\n      setApi(\"logout\");\n      setApiStatus(JSON.stringify(response.data.result));\n    }).catch(err => setApiStatus(JSON.stringify(err)));\n  };\n\n  const getUsers = () => {\n    axios.get(\"http://localhost:8000/api/users\", {\n      withCredentials: true\n    }).then(response => {\n      setApi(\"getUsers\");\n      setApiStatus(JSON.stringify(response.data.result));\n    }).catch(err => setApiStatus(JSON.stringify(err)));\n  };\n\n  const registerUser = () => {\n    let userInfo = {\n      name: name,\n      email: email\n    };\n    axios.patch(\"http://localhost:8000/login/registeruser\", userInfo, {\n      withCredentials: true\n    }).then(response => {\n      setApi(\"registerUser\");\n      setApiStatus(JSON.stringify(response.data.result));\n    }).catch(err => setApiStatus(JSON.stringify(err)));\n  };\n\n  const writeSocket = () => {\n    let socketmsg = {\n      message: name,\n      email: email\n    };\n    console.log(\"writemessage\" + JSON.stringify(socketmsg));\n    socket.emit(\"event_from_client\", socketmsg);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:8000/login/github_redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Github Login\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:8000/login/google_redirect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Google Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getAuthenticatedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Get Authenticated User\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: logoutAuthenticatedUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"getUsers\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: registerUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: writeSocket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Write Socket\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Api: \", api), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: JSON.stringify(apiStatus),\n    cols: 80,\n    rows: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/tomts/source/repos/CodingDojo/Dojo_Assignments/MERN/FullStack/practice1/client/src/App.js"],"names":["React","axios","io","App","api","setApi","useState","apiStatus","setApiStatus","name","setName","email","setEmail","socket","useEffect","console","log","on","data","JSON","stringify","disconnect","getAuthenticatedUser","get","withCredentials","then","response","result","catch","err","logoutAuthenticatedUser","post","getUsers","registerUser","userInfo","patch","writeSocket","socketmsg","message","emit","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [api, setApi] = React.useState(null);\n  const [apiStatus, setApiStatus] = React.useState(null);\n  const [name, setName] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const [socket] = React.useState(() => io(\":8000\"));\n  \n  React.useEffect(() => {\n    console.log(\"is this running?\");\n    socket.on('Welcome', data => setApiStatus(JSON.stringify(data)));\n    return () => socket.disconnect(true);\n  },[socket]);\n\n  const getAuthenticatedUser = () => {\n    axios.get(\"http://localhost:8000/login/getauthenticateduser\", { withCredentials: true })\n    .then(response => {\n      setApi(\"getAuthenticatedUser\");\n      setApiStatus(JSON.stringify(response.data.result));\n    })\n    .catch(err => setApiStatus(JSON.stringify(err)));\n  }\n\n  const logoutAuthenticatedUser = () => {\n    axios.post(\"http://localhost:8000/login/logout\", {}, { withCredentials: true })\n    .then(response => {\n      setApi(\"logout\");\n      setApiStatus(JSON.stringify(response.data.result));\n    })\n    .catch(err => setApiStatus(JSON.stringify(err)));\n  }\n  const getUsers = () => {\n    axios.get(\"http://localhost:8000/api/users\", { withCredentials: true })\n    .then(response => {\n      setApi(\"getUsers\");\n      setApiStatus(JSON.stringify(response.data.result));\n    })\n    .catch(err => setApiStatus(JSON.stringify(err)));\n  }\n  const registerUser = () => {\n    let userInfo = { name:name, email:email };\n    axios.patch(\"http://localhost:8000/login/registeruser\", userInfo, { withCredentials: true })\n    .then(response => {\n      setApi(\"registerUser\");\n      setApiStatus(JSON.stringify(response.data.result));\n    })\n    .catch(err => setApiStatus(JSON.stringify(err)));\n  }\n  const writeSocket = () => {\n    let socketmsg = { message: name, email: email }\n    console.log(\"writemessage\"+JSON.stringify(socketmsg))\n    socket.emit(\"event_from_client\",socketmsg);\n  }\n  return (\n    <div className=\"App\">\n      <a href=\"http://localhost:8000/login/github_redirect\">Github Login</a>\n      <a href=\"http://localhost:8000/login/google_redirect\">Google Login</a>\n      <button onClick={getAuthenticatedUser}>Get Authenticated User</button>\n      <button onClick={logoutAuthenticatedUser}>Logout</button>\n      <button onClick={getUsers}>getUsers</button>\n      <label htmlFor=\"username\">Name</label>\n      <input type=\"text\" id=\"username\" value={name} onChange={e => setName(e.target.value)}></input>\n      <label htmlFor=\"email\">Email</label>\n      <input type=\"text\" id=\"email\" value={email} onChange={e => setEmail(e.target.value)}></input>\n      <button onClick={registerUser}>Register</button>\n      <button onClick={writeSocket}>Write Socket</button>\n      <h1>Api: {api}</h1>\n      <textarea value={JSON.stringify(apiStatus)} cols={80} rows={20}></textarea>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}