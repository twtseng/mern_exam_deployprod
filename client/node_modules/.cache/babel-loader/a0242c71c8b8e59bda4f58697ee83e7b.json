{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomts\\\\source\\\\repos\\\\CodingDojo\\\\Dojo_Exams\\\\mern_exam_dev\\\\client\\\\src\\\\components\\\\ItemSubitems.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Form, Button, Card, Jumbotron, Table } from 'react-bootstrap';\nimport { navigate } from '@reach/router';\n\nconst ItemEdit = props => {\n  const [validationError, setValidationError] = React.useState(\"\");\n  const [selectedItem, setSelectedItem] = React.useState(\"\");\n  const [strVal1, setStrVal1] = React.useState(\"\");\n  const [strVal2, setStrVal2] = React.useState(\"\");\n\n  const getSelectedItem = () => {\n    axios.get(`http://localhost:8000/api/items/${props.id}`).then(response => {\n      let item = response.data.result;\n      selectedItem(item);\n    });\n  };\n\n  React.useEffect(() => {\n    getSelectedItem();\n  }, [props.id]);\n\n  const addSubItem = () => {\n    let subItem = {\n      strVal1: strVal1,\n      strVal2: strVal2\n    };\n    axios.put(`/api/items/${props.id}/subitem\"/`, subItem).then(response => {\n      if (response.data.status === \"succeeded\") {\n        getSelectedItem();\n      } else {\n        setValidationError(JSON.stringify(response.data.message));\n      }\n    }).catch(err => {\n      let errors = [];\n      console.log(err.response);\n      let data = err.response.data;\n\n      for (let key in data.errors) {\n        errors.push(data.errors[key].message);\n      }\n\n      setValidationError(errors.join(\", \"));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Subitems\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"strVal1\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal1\",\n    value: strVal1,\n    onChange: e => setStrVal1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"strVal2\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal2\",\n    value: strVal2,\n    onChange: e => setStrVal2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: addSubItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, validationError)), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"strVal1\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"strVal2\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, selectedItem.subItems.map(p => /*#__PURE__*/React.createElement(\"tr\", {\n    key: p._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, p.strVal1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, p.strVal2))))));\n};\n\nexport default ItemEdit;","map":{"version":3,"sources":["C:/Users/tomts/source/repos/CodingDojo/Dojo_Exams/mern_exam_dev/client/src/components/ItemSubitems.js"],"names":["React","axios","Form","Button","Card","Jumbotron","Table","navigate","ItemEdit","props","validationError","setValidationError","useState","selectedItem","setSelectedItem","strVal1","setStrVal1","strVal2","setStrVal2","getSelectedItem","get","id","then","response","item","data","result","useEffect","addSubItem","subItem","put","status","JSON","stringify","message","catch","err","errors","console","log","key","push","join","e","target","value","subItems","map","p","_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Card, Jumbotron, Table } from 'react-bootstrap';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst ItemEdit = props => {\r\n    const [validationError, setValidationError] = React.useState(\"\");\r\n    const [selectedItem, setSelectedItem] = React.useState(\"\")\r\n    const [strVal1, setStrVal1] = React.useState(\"\")\r\n    const [strVal2, setStrVal2] = React.useState(\"\")\r\n    const getSelectedItem = () => {\r\n        axios.get(`http://localhost:8000/api/items/${props.id}`)\r\n        .then(response => {\r\n            let item = response.data.result;\r\n            selectedItem(item);\r\n        })\r\n    };\r\n    React.useEffect(() => {\r\n        getSelectedItem();\r\n    },[props.id]);\r\n\r\n    const addSubItem = () => {\r\n        let subItem = {\r\n            strVal1: strVal1,\r\n            strVal2: strVal2\r\n        }\r\n        axios.put(`/api/items/${props.id}/subitem\"/`, subItem)\r\n            .then(response => {\r\n                if (response.data.status === \"succeeded\") {\r\n                    getSelectedItem();\r\n                } else {\r\n                    setValidationError(JSON.stringify(response.data.message));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                let errors = [];\r\n                console.log(err.response);\r\n                let data = err.response.data;\r\n                for (let key in data.errors) {\r\n                    errors.push(data.errors[key].message);\r\n                }\r\n                setValidationError(errors.join(\", \"));\r\n            });\r\n    }        \r\n    return (\r\n        <Jumbotron>\r\n            <h3>Subitems</h3>\r\n            <Form>\r\n            <Form.Group controlId=\"strVal1\">\r\n                <Form.Label>strVal1</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter strVal1\" value={strVal1} onChange={e => setStrVal1(e.target.value)}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"strVal2\">\r\n                <Form.Label>strVal2</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter strVal2\" value={strVal2} onChange={e => setStrVal2(e.target.value)}/>\r\n            </Form.Group>\r\n            <div className=\"d-flex justify-content-around\">\r\n            <Button variant=\"primary\" onClick={addSubItem}>\r\n                Add\r\n            </Button>\r\n            </div>\r\n            <Card.Text className=\"text-danger\">\r\n                {validationError}\r\n            </Card.Text>\r\n            </Form>\r\n            <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n            <tr>\r\n            <th>strVal1</th>\r\n            <th>strVal2</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {\r\n                selectedItem.subItems.map(p =>\r\n                    <tr key={p._id}>\r\n                    <td>{p.strVal1}</td>\r\n                    <td>{p.strVal2}</td>\r\n                    </tr>\r\n                )\r\n            }\r\n        </tbody>\r\n        </Table>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default ItemEdit\r\n"]},"metadata":{},"sourceType":"module"}