{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\tomts\\\\source\\\\repos\\\\CodingDojo\\\\Dojo_Exams\\\\mern_exam_deployprod\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{Container}from'react-bootstrap';import{Router,Link,navigate}from'@reach/router';import axios from'axios';import io from'socket.io-client';import'bootstrap/dist/css/bootstrap.min.css';import'./App.css';import AppNavBar from'./components/AppNavBar';import PetList from'./components/PetList';import PetAdd from'./components/PetAdd';import PetEdit from'./components/PetEdit';import PetView from'./components/PetView';function App(){var _React$useState=React.useState(function(){return io(\":8000\");}),_React$useState2=_slicedToArray(_React$useState,1),socket=_React$useState2[0];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),pets=_React$useState4[0],setPets=_React$useState4[1];var refreshPets=function refreshPets(){axios.get(\"http://localhost:8000/api/pets\").then(function(response){return setPets(response.data.result);});};var deletePet=function deletePet(petId){axios.delete(\"http://localhost:8000/api/pets/\".concat(petId)).then(function(response){if(response.data.status===\"succeeded\"){refreshPets();}});};React.useEffect(function(){refreshPets();socket.on('new_message_from_server',function(msg){//setChatMessages(prevMessages => { return [msg, ...prevMessages]})\n});},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(AppNavBar,{appTitle:\"Pet Shelter Mern Exam\"}),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(PetList,{path:\"/\",pets:pets,refreshPets:refreshPets,deletePet:deletePet}),/*#__PURE__*/React.createElement(PetAdd,{path:\"/pets/new\",refreshPets:refreshPets}),/*#__PURE__*/React.createElement(PetEdit,{path:\"/pets/:id/edit\",refreshPets:refreshPets}),/*#__PURE__*/React.createElement(PetView,{path:\"/pets/:id\",deletePet:deletePet}))));}export default App;","map":{"version":3,"sources":["C:/Users/tomts/source/repos/CodingDojo/Dojo_Exams/mern_exam_deployprod/client/src/App.js"],"names":["React","Container","Router","Link","navigate","axios","io","AppNavBar","PetList","PetAdd","PetEdit","PetView","App","useState","socket","pets","setPets","refreshPets","get","then","response","data","result","deletePet","petId","delete","status","useEffect","on","msg"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,QAAvB,KAAuC,eAAvC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,EAAP,KAAe,kBAAf,CACA,MAAO,sCAAP,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CAEA,QAASC,CAAAA,GAAT,EAAe,qBACIZ,KAAK,CAACa,QAAN,CAAe,iBAAMP,CAAAA,EAAE,CAAC,OAAD,CAAR,EAAf,CADJ,oDACNQ,MADM,0CAEWd,KAAK,CAACa,QAAN,CAAe,EAAf,CAFX,qDAENE,IAFM,qBAEAC,OAFA,qBAGb,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBZ,KAAK,CAACa,GAAN,CAAU,gCAAV,EACCC,IADD,CACM,SAAAC,QAAQ,QAAIJ,CAAAA,OAAO,CAACI,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAX,EADd,EAED,CAHD,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,CACzBnB,KAAK,CAACoB,MAAN,0CAA+CD,KAA/C,GACKL,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACC,IAAT,CAAcK,MAAd,GAAyB,WAA7B,CAA0C,CACtCT,WAAW,GACd,CACJ,CALL,EAMD,CAPD,CASAjB,KAAK,CAAC2B,SAAN,CAAgB,UAAM,CACpBV,WAAW,GACXH,MAAM,CAACc,EAAP,CAAU,yBAAV,CAAqC,SAAAC,GAAG,CAAI,CAC1C;AACD,CAFD,EAGD,CALD,CAKE,EALF,EAOA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,SAAD,EACE,QAAQ,CAAC,uBADX,EADF,cAII,oBAAC,SAAD,mBACE,oBAAC,MAAD,mBACE,oBAAC,OAAD,EAAS,IAAI,CAAC,GAAd,CAAkB,IAAI,CAAEd,IAAxB,CAA8B,WAAW,CAAEE,WAA3C,CAAwD,SAAS,CAAEM,SAAnE,EADF,cAEE,oBAAC,MAAD,EAAQ,IAAI,CAAC,WAAb,CAAyB,WAAW,CAAEN,WAAtC,EAFF,cAGE,oBAAC,OAAD,EAAS,IAAI,CAAC,gBAAd,CAA+B,WAAW,CAAEA,WAA5C,EAHF,cAIE,oBAAC,OAAD,EAAS,IAAI,CAAC,WAAd,CAA0B,SAAS,CAAEM,SAArC,EAJF,CADF,CAJJ,CADF,CAeD,CAED,cAAeX,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Router, Link, navigate } from '@reach/router';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AppNavBar from './components/AppNavBar';\nimport PetList from './components/PetList';\nimport PetAdd from './components/PetAdd';\nimport PetEdit from './components/PetEdit';\nimport PetView from './components/PetView';\n\nfunction App() {\n  const [socket] = React.useState(() => io(\":8000\"));\n  const [pets, setPets] = React.useState([]);\n  const refreshPets = () => {\n    axios.get(\"http://localhost:8000/api/pets\")\n    .then(response => setPets(response.data.result))\n  }\n  const deletePet = petId => {\n    axios.delete(`http://localhost:8000/api/pets/${petId}`)\n        .then(response => {\n            if (response.data.status === \"succeeded\") {\n                refreshPets();\n            } \n        })\n  } \n\n  React.useEffect(() => {\n    refreshPets();\n    socket.on('new_message_from_server', msg => {\n      //setChatMessages(prevMessages => { return [msg, ...prevMessages]})\n    });\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <AppNavBar\n        appTitle=\"Pet Shelter Mern Exam\"\n        />\n        <Container>\n          <Router>\n            <PetList path=\"/\" pets={pets} refreshPets={refreshPets} deletePet={deletePet}/>\n            <PetAdd path=\"/pets/new\" refreshPets={refreshPets}/>\n            <PetEdit path=\"/pets/:id/edit\" refreshPets={refreshPets}/>\n            <PetView path=\"/pets/:id\" deletePet={deletePet}/>\n          </Router>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}