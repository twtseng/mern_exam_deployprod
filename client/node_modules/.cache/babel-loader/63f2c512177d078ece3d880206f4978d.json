{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomts\\\\source\\\\repos\\\\CodingDojo\\\\Dojo_Exams\\\\mern_exam_deploy\\\\client\\\\src\\\\components\\\\PetEdit.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Form, Button, Card, Jumbotron } from 'react-bootstrap';\nimport { navigate } from '@reach/router';\n\nconst PetEdit = props => {\n  const [validationError, setValidationError] = React.useState(\"\");\n  const [name, setName] = React.useState(\"\");\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [skill1, setSkill1] = React.useState(\"\");\n  const [skill2, setSkill2] = React.useState(\"\");\n  const [skill3, setSkill3] = React.useState(\"\");\n\n  const getSelectedPet = () => {\n    axios.get(`http://localhost:8000/api/pets/${props.id}`).then(response => {\n      let pet = response.data.result;\n      setName(pet.name);\n      setType(pet.strVal1);\n      setDescription(pet.strVal2);\n      setSkill1(pet.setSkill1);\n      setSkill1(pet.setSkill2);\n      setSkill1(pet.setSkill3);\n    });\n  };\n\n  React.useEffect(() => {\n    getSelectedPet();\n  }, [props.id]);\n\n  const updatePet = () => {\n    let updatedPet = {\n      name: petName,\n      strVal1: strVal1,\n      strVal2: strVal2\n    };\n    axios.patch(`http://localhost:8000/api/items/${props.id}`, updatedPet).then(response => {\n      if (response.data.status === \"succeeded\") {\n        props.refreshPets();\n        navigate(\"/\");\n      } else {\n        setValidationError(JSON.stringify(response.data.message));\n      }\n    }).catch(err => {\n      let errors = [];\n      console.log(err.response);\n      let data = err.response.data;\n\n      for (let key in data.errors) {\n        errors.push(data.errors[key].message);\n      }\n\n      setValidationError(errors.join(\", \"));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Edit Pet\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"itemName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Pet Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter item name\",\n    value: itemName,\n    onChange: e => setPetName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"strVal1\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal1\",\n    value: strVal1,\n    onChange: e => setStrVal1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"strVal2\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal2\",\n    value: strVal2,\n    onChange: e => setStrVal2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => navigate(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: updatePet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, validationError)));\n};\n\nexport default PetEdit;","map":{"version":3,"sources":["C:/Users/tomts/source/repos/CodingDojo/Dojo_Exams/mern_exam_deploy/client/src/components/PetEdit.js"],"names":["React","axios","Form","Button","Card","Jumbotron","navigate","PetEdit","props","validationError","setValidationError","useState","name","setName","type","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","getSelectedPet","get","id","then","response","pet","data","result","strVal1","strVal2","useEffect","updatePet","updatedPet","petName","patch","status","refreshPets","JSON","stringify","message","catch","err","errors","console","log","key","push","join","itemName","e","setPetName","target","value","setStrVal1","setStrVal2"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Card, Jumbotron } from 'react-bootstrap';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst PetEdit = props => {\r\n    const [validationError, setValidationError] = React.useState(\"\");\r\n    const [name, setName] = React.useState(\"\")\r\n    const [type, setType] = React.useState(\"\")\r\n    const [description, setDescription] = React.useState(\"\")\r\n    const [skill1, setSkill1] = React.useState(\"\")\r\n    const [skill2, setSkill2] = React.useState(\"\")\r\n    const [skill3, setSkill3] = React.useState(\"\")\r\n\r\n    const getSelectedPet = () => {\r\n        axios.get(`http://localhost:8000/api/pets/${props.id}`)\r\n        .then(response => {\r\n            let pet = response.data.result;\r\n            setName(pet.name);\r\n            setType(pet.strVal1);\r\n            setDescription(pet.strVal2);\r\n            setSkill1(pet.setSkill1);\r\n            setSkill1(pet.setSkill2);\r\n            setSkill1(pet.setSkill3);\r\n        })\r\n    };\r\n    React.useEffect(() => {\r\n        getSelectedPet();\r\n    },[props.id]);\r\n\r\n    const updatePet = () => {\r\n        let updatedPet = {\r\n            name: petName,\r\n            strVal1: strVal1,\r\n            strVal2: strVal2\r\n        }\r\n        axios.patch(`http://localhost:8000/api/items/${props.id}`, updatedPet)\r\n            .then(response => {\r\n                if (response.data.status === \"succeeded\") {\r\n                    props.refreshPets();\r\n                    navigate(\"/\");\r\n                } else {\r\n                    setValidationError(JSON.stringify(response.data.message));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                let errors = [];\r\n                console.log(err.response);\r\n                let data = err.response.data;\r\n                for (let key in data.errors) {\r\n                    errors.push(data.errors[key].message);\r\n                }\r\n                setValidationError(errors.join(\", \"));\r\n            });\r\n    }        \r\n    return (\r\n        <Jumbotron>\r\n            <h3>Edit Pet</h3>\r\n            <Form>\r\n            <Form.Group controlId=\"itemName\">\r\n                <Form.Label>Pet Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter item name\" value={itemName} onChange={e => setPetName(e.target.value)}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"strVal1\">\r\n                <Form.Label>strVal1</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter strVal1\" value={strVal1} onChange={e => setStrVal1(e.target.value)}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"strVal2\">\r\n                <Form.Label>strVal2</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter strVal2\" value={strVal2} onChange={e => setStrVal2(e.target.value)}/>\r\n            </Form.Group>\r\n            <div className=\"d-flex justify-content-around\">\r\n            <Button variant=\"primary\" onClick={() => navigate(\"/\")}>\r\n                Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={updatePet}>\r\n                Submit\r\n            </Button>\r\n            </div>\r\n            <Card.Text className=\"text-danger\">\r\n                {validationError}\r\n            </Card.Text>\r\n            </Form>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default PetEdit\r\n"]},"metadata":{},"sourceType":"module"}