{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomts\\\\source\\\\repos\\\\CodingDojo\\\\Dojo_Exams\\\\mern_exam_dev\\\\client\\\\src\\\\components\\\\AddEdit.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Form, Button, Card } from 'react-bootstrap';\n\nconst AddEdit = props => {\n  const [validationError, setValidationError] = React.useState(\"\");\n  const [itemName, setItemName] = React.useState(\"\");\n  const [strVal1, setStrVal1] = React.useState(\"\");\n  const [strVal2, setStrVal2] = React.useState(\"\");\n\n  const AddItem = () => {\n    let newItem = {\n      name: itemName,\n      strVal1: strVal1,\n      strVal2: strVal2\n    };\n    axios.put(\"http://localhost:8000/api/items\", newItem).then(response => {\n      if (response.data.status === \"succeeded\") {\n        props.refreshItems();\n        setValidationError(\"\");\n        props.setSelectedTab('all_items');\n      } else {\n        setValidationError(JSON.stringify(response.data.message));\n      }\n    }).catch(err => {\n      let errors = [];\n      console.log(erro.response);\n      let data = err.response.data;\n\n      for (let key in data.errors) {\n        errors.push(data.errors[key].message);\n      }\n\n      setValidationError(errors.join(\", \"));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"itemName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Item Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter item name\",\n    value: itemName,\n    onChange: e => setItemName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"strVal1\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal1\",\n    value: strVal1,\n    onChange: e => setStrVal1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"strVal2\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal2\",\n    value: strVal2,\n    onChange: e => setStrVal2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: AddItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Card.Text, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, validationError));\n};\n\nexport default AddEdit;","map":{"version":3,"sources":["C:/Users/tomts/source/repos/CodingDojo/Dojo_Exams/mern_exam_dev/client/src/components/AddEdit.js"],"names":["React","axios","Form","Button","Card","AddEdit","props","validationError","setValidationError","useState","itemName","setItemName","strVal1","setStrVal1","strVal2","setStrVal2","AddItem","newItem","name","put","then","response","data","status","refreshItems","setSelectedTab","JSON","stringify","message","catch","err","errors","console","log","erro","key","push","join","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\n\r\nconst AddEdit = props => {\r\n    const [validationError, setValidationError] = React.useState(\"\");\r\n    const [itemName, setItemName] = React.useState(\"\")\r\n    const [strVal1, setStrVal1] = React.useState(\"\")\r\n    const [strVal2, setStrVal2] = React.useState(\"\")\r\n\r\n    const AddItem = () => {\r\n        let newItem = {\r\n            name: itemName,\r\n            strVal1: strVal1,\r\n            strVal2: strVal2\r\n        }\r\n        axios.put(\"http://localhost:8000/api/items\", newItem)\r\n            .then(response => {\r\n                if (response.data.status === \"succeeded\") {\r\n                    props.refreshItems();\r\n                    setValidationError(\"\");\r\n                    props.setSelectedTab('all_items');\r\n                } else {\r\n                    setValidationError(JSON.stringify(response.data.message));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                let errors = [];\r\n                console.log(erro.response);\r\n                let data = err.response.data;\r\n                for (let key in data.errors) {\r\n                    errors.push(data.errors[key].message);\r\n                }\r\n                setValidationError(errors.join(\", \"));\r\n            });\r\n    }    \r\n    return (\r\n        <Form>\r\n        <Form.Group controlId=\"itemName\">\r\n            <Form.Label>Item Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter item name\" value={itemName} onChange={e => setItemName(e.target.value)}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"strVal1\">\r\n            <Form.Label>strVal1</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter strVal1\" value={strVal1} onChange={e => setStrVal1(e.target.value)}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"strVal2\">\r\n            <Form.Label>strVal2</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter strVal2\" value={strVal2} onChange={e => setStrVal2(e.target.value)}/>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" >\r\n            Update\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={AddItem}>\r\n            Add\r\n        </Button>\r\n        <Card.Text className=\"text-danger\">\r\n            {validationError}\r\n        </Card.Text>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default AddEdit\r\n"]},"metadata":{},"sourceType":"module"}