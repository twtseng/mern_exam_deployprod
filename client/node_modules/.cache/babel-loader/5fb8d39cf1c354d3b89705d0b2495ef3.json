{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomts\\\\source\\\\repos\\\\CodingDojo\\\\Dojo_Exams\\\\mern_exam_dev\\\\client\\\\src\\\\components\\\\AddEdit.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\n\nconst AddEdit = props => {\n  const [validationError, setValidationError] = React.useState(\"\");\n  const [itemName, setItemName] = React.useState(\"\");\n  const [strVal1, setStrVal1] = React.useState(\"\");\n  const [strVal2, setStrVal2] = React.useState(\"\");\n\n  const AddItem = () => {\n    let newItem = {\n      name: itemName,\n      strVal1: strVal1,\n      strVal2: strVal2\n    };\n    axios.put(\"http://localhost:8000/api/items\", newItem).then(response => {\n      if (response.data.status === \"succeeded\") {\n        props.refreshItems();\n        props.setSelectedTab('all_items');\n      } else {\n        setValidationError(JSON.stringify(response.data.message));\n      }\n    }).catch(err => {\n      let errors = [];\n      let data = err.response.data;\n\n      for (let key in data.errors) {\n        errors.push(data.errors[key].message);\n      }\n\n      setValidationError(errors.join(\", \"));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"itemName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Item Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter item name\",\n    value: itemName,\n    onChange: e => setItemName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"strVal1\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal1\",\n    value: strVal1,\n    onChange: e => setStrVal1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"strVal2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"strVal2\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter strVal2\",\n    value: strVal2,\n    onChange: e => setStrVal2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: AddItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, validationError));\n};\n\nexport default AddEdit;","map":{"version":3,"sources":["C:/Users/tomts/source/repos/CodingDojo/Dojo_Exams/mern_exam_dev/client/src/components/AddEdit.js"],"names":["React","axios","Form","Button","AddEdit","props","validationError","setValidationError","useState","itemName","setItemName","strVal1","setStrVal1","strVal2","setStrVal2","AddItem","newItem","name","put","then","response","data","status","refreshItems","setSelectedTab","JSON","stringify","message","catch","err","errors","key","push","join","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst AddEdit = props => {\r\n    const [validationError, setValidationError] = React.useState(\"\");\r\n    const [itemName, setItemName] = React.useState(\"\")\r\n    const [strVal1, setStrVal1] = React.useState(\"\")\r\n    const [strVal2, setStrVal2] = React.useState(\"\")\r\n\r\n    const AddItem = () => {\r\n        let newItem = {\r\n            name: itemName,\r\n            strVal1: strVal1,\r\n            strVal2: strVal2\r\n        }\r\n        axios.put(\"http://localhost:8000/api/items\", newItem)\r\n            .then(response => {\r\n                if (response.data.status === \"succeeded\") {\r\n                    props.refreshItems();\r\n                    props.setSelectedTab('all_items');\r\n                } else {\r\n                    setValidationError(JSON.stringify(response.data.message));\r\n                }\r\n            })\r\n            .catch(err => {\r\n                let errors = [];\r\n                let data = err.response.data;\r\n                for (let key in data.errors) {\r\n                    errors.push(data.errors[key].message);\r\n                }\r\n                setValidationError(errors.join(\", \"));\r\n            });\r\n    }    \r\n    return (\r\n        <Form>\r\n        <Form.Group controlId=\"itemName\">\r\n            <Form.Label>Item Name</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter item name\" value={itemName} onChange={e => setItemName(e.target.value)}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"strVal1\">\r\n            <Form.Label>strVal1</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter strVal1\" value={strVal1} onChange={e => setStrVal1(e.target.value)}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"strVal2\">\r\n            <Form.Label>strVal2</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter strVal2\" value={strVal2} onChange={e => setStrVal2(e.target.value)}/>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" >\r\n            Update\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={AddItem}>\r\n            Add\r\n        </Button>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n              {validationError}\r\n        </Form.Control.Feedback>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default AddEdit\r\n"]},"metadata":{},"sourceType":"module"}